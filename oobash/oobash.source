##################################################################
# Author:  andreas.gregor.frank@googlemail.com                                
#     
# License: The MIT License
#
# Copyright (c) <2010> <andreas.gregor.frank@googlemail.com>

######################
######################
##                  ##
##     GLOBALS      ## 
##                  ##
######################
######################

__STARTTIME__="`date +%s.%N 2>/dev/null`"
if command -v gdate >/dev/null 2>&1; then
   __STARTTIME__="`gdate +%s.%N 2>/dev/null`"
fi
SECONDS=0
__VERSION__="0.39.14"
__FILENAME__="oobash.source"
__STACKTRACE__="true"
__HELP__="true"

# ----------------------------------------------------
# Some start up tests:

export TEXTDOMAIN=oobash
export TEXTDOMAINDIR="${0%${0##*/}}"locale

# you should source not execute
if [ "${0##*/}" = "${__FILENAME__}" ]; then
   echo $"Sorry, you should: source ${__FILENAME__} and not execute it..."
   unset __FILENAME__
   unset __VERSION__
   unset __STACKTRACE__
   unset __HELP__
   unset __STARTTIME__
   unset TEXTDOMAINDIR
   unset TEXTDOMAIN
   exit 0
fi

export __OODIR__="$(cd -P "${BASH_ARGV[0]%/*}" 2>/dev/null; echo ${PWD})"
export TEXTDOMAINDIR="${__OODIR__}/locale"

# you need a bash 4 
if [ $BASH_VERSINFO -lt 4 ]; then
   echo $"Sorry, you need a bash version 4..."
   unset __FILENAME__
   unset __VERSION__
   unset __OODIR__
   unset __STACKTRACE__
   unset __HELP__
   unset __STARTTIME__
   unset TEXTDOMAINDIR
   unset TEXTDOMAIN
   return 0
fi

# End start up tests
# ----------------------------------------------------

#  no shell exit when a command exits non-zero 
#  (some private functions in this framework do this!)
set +errexit

# i18n function library from the gnu textutils
if command -v gettext.sh >/dev/null 2>&1; then
   source gettext.sh
fi

# Used arrays:
###############

# Used for environment cleanup
declare -A __Registry__

# Return values for exceptions:
declare -A __ExceptionValues__
__ExceptionValues__=( 
 [DecoderException]=140
 [AuthException]=141
 [IllegalArgumentException]=142
 [IndexOutOfBoundsException]=143
 [IOException]=144
 [NotInPathException]=145
 [WrongClassException]=146
 [ProcessException]=147
 [Unknown]=250
)

# All available Process signals (used in kill)
declare -a __Signals__
declare unsetAtEnd
shopt -q extglob
# if extglob not set already --> set it now and change boolean 
if (( $? == 1 )); then
   shopt -s extglob
   unsetAtEnd="true"
fi 
declare signal="$(kill -l 2>/dev/null)"
declare -i counter=0
for sig in ${signal//)/}
do
   __Signals__[$counter]=$sig
   ((counter++))
done
set -o posix
declare signal="$(kill -l 2>/dev/null)"
for sig in ${signal//)/}
do
   __Signals__[$counter]=$sig
   ((counter++))
done
set +o posix
if [[ "${unsetAtEnd}" == "true" ]]; then
   shopt -u extglob
fi
unset signal sig counter unsetAtEnd

# All external commands used in this framework:
declare -a __Dependencies__=(bc chmod date mkdir mktemp mv readlink rm rmdir stat touch
                             ps kill renice openssl ssh scp vim diff pod2man pod2usage podselect)

# All optional variables
declare -a __OptionalVars__=(__AUTHOR__ __COMPANY__ __EMAIL__ __QUIET__ )

# Arrays for framework methods and inheritance happens here:
declare -a __ObjectMethods__=(equals getClass hashCode toString)

declare -a __ComparableMethods__=(compareTo)

declare -a __BooleanMethods__=()

declare -a __Boolean__=(${__BooleanMethods__[@]} ${__ComparableMethods__[@]} ${__ObjectMethods__[@]})

declare -a __StringMethods__=(base64Decode base64Encode capitalize center charAt charCodeAt compareToIgnoreCase 
                              concat contains containsNone containsOnly count endsWith equalsIgnoreCase indexOf 
                              indexOfDifference isAlnum isAlpha isAscii isDigit isEmpty isHexDigit isLowerCase 
                              isPrintable isSpace isTitle isUpperCase isVisible lastIndexOf length lstrip matches 
                              replaceAll replaceFirst reverse rstrip startsWith substring swapCase title toLowerCase 
                              toUpperCase trim zfill)

declare -a __String__=(${__ComparableMethods__[@]} ${__ObjectMethods__[@]} ${__StringMethods__[@]}) 

declare -a __FileMethods__=(append canExecute canRead canWrite clear createNewFile delete deleteRecursively delLine 
                            exists getAbsolutePath getBase getCanonicalPath getExtension getFreeSpace getGroup getInode 
                            getLine getName getOwner getParent getPath getPosixFilePermissions getText getTotalSpace 
                            getUsableSpace hasGidBit hasStickyBit hasUidBit indexOfExtension indexOfLastSeparator insertAfterLine 
                            insertBeforeLine isAbsolute isBlockSpecial isCharacterSpecial isDirectory isFile isHidden isNamedPipe 
                            isNewerThan isOlderThan isSocket isSymbolicLink lastAccessed lastChanged lastModified linecount 
                            linematch md5sum mkdir mkdirs replaceLine setExecutable setgid setLastAccessed setLastModified 
                            setPosixFilePermissions setReadable setReadOnly setStickyBit setText setuid setWritable sha1sum size touch)

declare -a __File__=(${__ComparableMethods__[@]} ${__FileMethods__[@]} ${__ObjectMethods__[@]})

declare -a __ProcessMethods__=(getCommand getEffectiveUserId getMemorySize getParentPid getPid getPriority getRealUserId 
                               getStartTime getStatus getUser isDaemon kill setPriority threadCount)

declare -a __Process__=(${__ObjectMethods__[@]} ${__ProcessMethods__[@]})

declare -a __SshMethods__=(command connect copy diffFile diffFiletree execModule getSshHost getSshPort getSshUser 
                           grep grepIgnoreCase grepInvertMatch vimEdit)

declare -a __Ssh__=(${__ObjectMethods__[@]} ${__SshMethods__[@]})

# register function:
####################

__registerFunction() {
   local value="$1"
   __Registry__["$value"]=function
   return 0
}
__registerFunction __registerFunction

# import function:
##################
__import() {
   local packageOrClass="${1/"oobash."/}"
   source "${__OODIR__}"/src/${packageOrClass//"."/"/"}.oobash
   return 0
}
__registerFunction __import

# import util functions
__import oobash.util.Decorator
__import oobash.util.Registry
__import oobash.util.Generator
__import oobash.util.Substitutions

# import private functions
__import oobash.private.Private

# import lang classes
__import oobash.lang.Object
__import oobash.lang.Comparable
__import oobash.lang.Math
__import oobash.lang.System
__import oobash.lang.String
__import oobash.lang.Boolean
__import oobash.lang.Process

# import io classes
__import oobash.io.File

# import i18n functions 
__import oobash.i18n.I18nMessage

# import netservice functions
__import oobash.netservice.Ssh

# Register already defined vars and functions
__registerVar __ObjectMethods__
__registerVar __ComparableMethods__
__registerVar __Dependencies__
__registerVar __ExceptionValues__
__registerVar __Signals__
__registerVar __OptionalVars__
__registerVar __VERSION__
__registerVar __FILENAME__
__registerVar __LOGGINGPROPERTIESFILE__
__registerVar __OODIR__
__registerVar __STACKTRACE__
__registerVar __HELP__
__registerVar __STARTTIME__
__registerVar TEXTDOMAINDIR
__registerVar TEXTDOMAIN

# source all your class files and script completions
globstarActive=$(Boolean.FALSE) 
shopt -q globstar
if (( $? == 1 )); then
   shopt -s globstar
   globstarActive="$(Boolean.TRUE)"
fi 
for class in "${__OODIR__}"/src/myClassFiles/**/*.oobash
do
   source "${class}" 2>/dev/null
done
for comp in "${__OODIR__}"/scripts/.completions/*.comp
do
   source "${comp}" 2>/dev/null
done
if [[ "${globstarActive}" == "$(Boolean.TRUE)" ]]; then
   shopt -u globstar
fi
unset class globstarActive comp

# Export scriptpath + scriptname if oobash is sourced by script
if [[ -z "$PS1" ]]; then
   call="$(caller)"
   call="${call/[0-9]* /}"
   if [[ ${call:0:2} == "./" ]]; then
      script="${PWD}"/"${call:2}"
   elif [[ ${call:0:1} == "." ]]; then
      script="${PWD}"/"${call}"
   else
      script="${call}"
   fi
   export __SCRIPT__="${script}"
   unset script call
   __registerVar __SCRIPT__
fi

# check if oobash is already active 
if ! __isAssocArray __OBJECTPOOL__ ; then
   # Add oobash man pages to manpath
   __OLDMANPATH__="$MANPATH"
   __registerVar __OLDMANPATH__
   export MANPATH=$MANPATH:"${__OODIR__}"/man

   # Add scripts directory to path
   __OLDPATH__="$PATH"
   __registerVar __OLDPATH__
   export PATH=$PATH:"${__OODIR__}"/scripts

   # Save PS4
   __OLDPS4__="$PS4"
   __registerVar __OLDPS4__
fi

# used as uniq object identifier 
declare -i __OBJCOUNTER__
__registerVar __OBJCOUNTER__

# for bsd systems: if there are any gnu tools, try to use them...
if command -v gdate >/dev/null 2>&1; then
   testtimestamp="$(gdate "+%N" 2>/dev/null)"
   if [[ "${testtimestamp: -1}" != "N" ]] && [[ -n "${testtimestamp}" ]]; then
      date() {
         gdate "$@"
         return $?
      }
      __registerFunction date
   fi
   __registerVar testtimestamp
fi

if command -v gstat >/dev/null 2>&1; then
   gstat --file-system / 2>/dev/null 1>&2
   if (( $? == 0 )); then
      stat() {
         gstat "$@"
         return $?
      }
      __registerFunction stat
   fi
fi

if command -v greadlink >/dev/null 2>&1; then
   greadlink -f / 2>/dev/null 1>&2
   if (( $? == 0 )); then
      readlink() {
         greadlink "$@"
         return $?
      }   
      __registerFunction readlink
   fi
fi

###################
###################
##               ##
##     CORE      ## 
##               ##
###################
###################

declare -A __OBJECTPOOL__
__registerVar __OBJECTPOOL__

declare -A __ATTRIBUTEPOOL__
__registerVar __ATTRIBUTEPOOL__

# if a command is not found (like all our object.method commands),
# then this function will be called to handle the situation.  
command_not_found_handle() {
   local this=''
   local str="$1"
   local char
   declare -i i=0
   for ((i=0; i < ${#str}; i++))
   do
      char="${str:i:1}"
      case ${char} in
         . )break;;
         * )this="${this}""${char}";;
      esac
   done
   local method="${str/"$this"./}"
   shift

   local objectExists="$(Boolean.FALSE)"
   local methodExists="$(Boolean.FALSE)"
   
   local key
   for key in "${!__OBJECTPOOL__[@]}"
   do 
      if [[ "${this}" == "${key}" ]]; then
         objectExists="$(Boolean.TRUE)"
         break
      fi
   done

   if [[ "$(Boolean.parseBoolean "$objectExists")" == "$(Boolean.TRUE)" ]]; then 
      local class
      local string="${__OBJECTPOOL__["$this"]}"
      for ((i=0; i < ${#string}; i++))
      do
         char="${string:i:1}"
         if [[ "${char}" == "@" ]]; then
            class="${string:0:i}"
         fi
      done 
      
      local meth
      for meth in $(eval echo \${!__${class}__[@]})
      do 
         if [[ "${method}" == "$(eval echo \${__${class}__[$meth]})" ]]; then
            methodExists="$(Boolean.TRUE)"  
            break
         fi
      done
   fi

   if [[ "$(Boolean.parseBoolean "${objectExists}")" == "$(Boolean.FALSE)" || \
         "$(Boolean.parseBoolean "${methodExists}")" == "$(Boolean.FALSE)" ]]; then
      I18n.err.println "bash: \$str: command not found."
      return 127
   fi

   __"${method}" "${this}" "${class}" "$@"
}
__registerFunction command_not_found_handle

###########################
###########################
##                       ##
##     STARTMESSAGE      ## 
##                       ##
###########################
###########################

if [[ $(Boolean.parseBoolean "${__QUIET__}") != "$(Boolean.TRUE)" ]] && [[ -n "$PS1" ]]; then
   System.out.println 
   I18n.out.println " oo-style framework for bash 4"
   I18n.out.println ' Version:      ${__VERSION__}'
   I18n.out.println " Author:       andreas.gregor.frank@googlemail.com"
   System.out.println 
   I18n.out.println " Stop showing this message by setting __QUIET__=true"
   System.out.println 
   I18n.out.println " Try the developer tools: Class.generator Script.generator Man.generator"
   System.out.println 
   I18n.out.println " Classes: String, File, Boolean, System, Math, I18nMessage, Process, Level, Ssh"
   I18n.out.println " Constructors: String, File, Boolean, Process, Level, Ssh"
   I18n.out.println " Usage: String a teststring or File a testfile or Boolean a True"
   I18n.out.println " Usage: a.toString"
   System.out.println 
   System.out.println " String:"
   System.out.println "  -String.asciiLetters -String.asciiLettersLowerCase -String.asciiLettersUpperCase -String.digits" 
   System.out.println "  -String.fromCharCode -String.hexDigits -String.octDigits -base64Decode -base64Encode -capitalize"
   System.out.println "  -center -charAt -charCodeAt -compareTo -compareToIgnoreCase -concat -contains -containsNone"
   System.out.println "  -containsOnly -count -endsWith -equals -equalsIgnoreCase -getClass -hashCode -indexOf"
   System.out.println "  -indexOfDifference -isAlnum -isAlpha -isAscii -isDigit -isEmpty -isHexDigit -isLowerCase" 
   System.out.println "  -isPrintable -isSpace -isTitle -isUpperCase -isVisible -lastIndexOf -length -lstrip -matches" 
   System.out.println "  -replaceAll -replaceFirst -reverse -rstrip -startsWith -substring -swapCase -title -toLowerCase"
   System.out.println "  -toString -toUpperCase -trim -zfill"
   System.out.println " File:"
   System.out.println " -File.createTempDir -File.createTempFile -File.createTemporaryDir -File.createTemporaryFile"
   System.out.println " -append -canExecute -canRead -canWrite -clear -compareTo -createNewFile -delete -deleteRecursively"
   System.out.println " -delLine -equals -exists -fileLength -getAbsolutePath -getBase -getCanonicalPath -getClass" 
   System.out.println " -getExtension -getFreeSpace -getGroup -getInode -getLine -getName -getOwner -getParent"
   System.out.println " -getPath -getPosixFilePermissions -getText -getTotalSpace -getUsableSpace -hasGidBit"
   System.out.println " -hashCode -hasStickyBit -hasUidBit -indexOfExtension -indexOfLastSeparator -insertAfterLine" 
   System.out.println " -insertBeforeLine -isAbsolute -isBlockSpecial -isCharacterSpecial -isDirectory -isFile"
   System.out.println " -isHidden -isNamedPipe -isNewerThan -isOlderThan -isSocket -isSymbolicLink -lastAccessed" 
   System.out.println " -lastChanged -lastModified -linecount -linematch -md5sum -mkdir -mkdirs -replaceLine"
   System.out.println " -setExecutable -setgid -setLastAccessed -setLastModified -setPosixFilePermissions -setReadable" 
   System.out.println " -setReadOnly -setStickyBit -setText -setuid -setWritable -sha1sum -toString -touch"
   System.out.println " Process:"
   System.out.println "  -Process.create -equals -getClass -getCommand -getEffectiveUserId -getMemorySize -getParentPid -getPid"
   System.out.println "  -getPriority -getRealUserId -getStartTime -getStatus -getUser -hashCode -isDaemon -kill"
   System.out.println "  -setPriority -threadCount -toString"
   System.out.println " Boolean:"
   System.out.println "  -Boolean.FALSE -Boolean.parseBoolean -Boolean.TRUE -compareTo -equals -getClass -hashCode -toString"
   System.out.println " Math:"
   System.out.println "  -Math.abs -Math.acos -Math.adder -Math.asin -Math.atan -Math.cbrt -Math.ceil -Math.cos -Math.cosh"
   System.out.println "  -Math.E -Math.exp -Math.expm1 -Math.floor -Math.hypot -Math.log -Math.log10 -Math.log1p -Math.max"
   System.out.println "  -Math.min -Math.multiplier -Math.PI -Math.random -Math.rint -Math.round -Math.signum -Math.sin -Math.sinh"
   System.out.println "  -Math.sqrt -Math.tan -Math.tanh -Math.toDegrees -Math.toRadians"
   System.out.println " System:"
   System.out.println "  -System.currentTimeMillis -System.currentTimeNanos -System.err.print -System.err.println -System.exit"
   System.out.println "  -System.out.print -System.out.println -System.runtime"
   System.out.println 
   I18n.out.println " Available help systems: String.help, File.help, Math.help, System.help, Boolean.help ..."
   I18n.out.println " Usage: Classname.help methodname(s)|constructorname|constantname or keyword: all"
   I18n.out.println " Example: String.help zfill"
   System.out.println 
   # Check for external commands --> NotInPathException if command not found
   I18n.out.println " Doing dependency check..."
   System.out.println
   if __dependencyCheck; then
      I18n.out.println " Everything ok!"
   else
      System.out.println
      I18n.out.println " Please install the missing package(s) to have complete functionality"
   fi
fi

##################################################
##################################################
##                                              ##
##     LOGGING (coming in version 0.4)          ## 
##                                              ##
##################################################
##################################################

# Do we have logging propeties to use ?
if __lookForLoggingPropertiesFile "$(caller)"; then

   declare -a __LayoutMethods__=(getContentType getFooter getHeader)
   __registerVar __LayoutMethods__

   declare -a __LevelMethods__=(getSyslogEquivalent isGreaterOrEqual toInt)
   declare -a __Level__=(${__LevelMethods__[@]} ${__ObjectMethods__[@]})

   # import log4oobash classes
   __import oobash.log4oobash.Layout
   __import oobash.log4oobash.Level

   # Create loglevel objects 
   Level OFF Infinity "OFF" 0          2>/dev/null
   Level FATAL 50000 "FATAL" 0         2>/dev/null
   Level ERROR 40000 "ERROR" 3         2>/dev/null
   Level WARN  30000 "WARN"  4         2>/dev/null
   Level INFO 20000 "INFO"  6          2>/dev/null
   Level DEBUG 10000 "DEBUG" 7         2>/dev/null
   Level TRACE 5000 "TRACE"  7         2>/dev/null
   Level ALL -Infinity "ALL"  7        2>/dev/null


   ###############################
   # DEFAULT CONFIG FOR LOGGING" #
   ###############################

   #=============================
   # Property: LOG_DATE_PATTERN
   #=============================
   if __gnudateCheck; then
      LOG_DATE_PATTERN="%b %e, %Y %T.%N"
   else
      LOG_DATE_PATTERN="%b %e, %Y %r"
   fi

   #=============================
   # Property: LOG_LEVEL
   #============================
   LOG_LEVEL=INFO

   #=============================
   # Property: LOG_LAYOUT
   #=============================
   LOG_LAYOUT=SimpleLayout

fi

return 0
