##################################################################
# Author:  andreas.gregor.frank@googlemail.com                                
#     
# License: The MIT License
#
# Copyright (c) <2010> <andreas.gregor.frank@googlemail.com>

####################
####################
##                ##
##     LEVEL      ## 
##                ##
####################
####################
   

#########################
#                       #
#      CONSTRUCTOR      # 
#                       #
#########################

Level() {
   declare -i returnValue=0
   if (( $# == 4 )); then
      local this="$1"

     __isObjectnameValid 
      returnValue=$?
      if (( returnValue == 0 )); then
         local pointer=$((__OBJCOUNTER__++))
         local class="${FUNCNAME}"

         local level="$2"
         local levelStr="$3"
         local syslogEquivalent="$4"

         __destruct "${this}"

         __alias "${this}" "${FUNCNAME}"

         __attribute level "${level}"
         __attribute levelStr "${levelStr}"
         __attribute syslogEquivalent "${syslogEquivalent}"
         
         __Keywords__+=("${this}")
      else
         __handleErrorMessage "${FUNCNAME}" "${FUNCNAME}"
      fi
   else
      __throw "IllegalArgumentException" ": Wrong number of arguments $#"
      returnValue=$?
      __handleErrorMessage "${FUNCNAME}" "${FUNCNAME}"
   fi
   return $returnValue
}
__registerClass Level

#####################
#                   #
#      METHODS      # 
#                   #
#####################

__getSyslogEquivalent() {
   declare -i returnValue=0
   if (( $# == 2 )); then
      local this="$1"
      local pointer
      pointer="$(__getObjectPointer "${this}")"
      System.out.println "${__ATTRIBUTEPOOL__[${pointer}@syslogEquivalent]}" 
   else
      __throw "IllegalArgumentException" ": Wrong number of arguments $(($#-2))"
      returnValue=$?
      __handleErrorMessage "$2" "${FUNCNAME:2}"
   fi
   return $returnValue
}

__isGreaterOrEqual() {
   declare -i returnValue=0
   if (( $# == 3 )); then
      this=$1
      class=$2
      argobject=$3
      argclass="$("$argobject".getClass 2>/dev/null)"
      if (( $? == 0 )); then 
         if [[ "$($this.getClass)" != "$argclass" ]]; then
            __throw "WrongClassException" ": Illegal argument: \"${argobject}\": $("$argobject".getClass)"
            returnValue=$?
            __handleErrorMessage "$2" "${FUNCNAME:2}" 
            return $returnValue
         fi
      else
         __throw "IllegalArgumentException" ": Illegal argument: \"$3\" is no object"
         returnValue=$?
         __handleErrorMessage "$2" "${FUNCNAME:2}" 
         return $returnValue
      fi      
      if (( $($this.toInt) == $(Math.max $($argobject.toInt) $($this.toInt)) )); then
         Boolean.TRUE
      else
         Boolean.FALSE
      fi
   else
      __throw "IllegalArgumentException" ": Wrong number of arguments $(($#-2))"
      returnValue=$?
      __handleErrorMessage "$2" "${FUNCNAME:2}"
   fi
   return $returnValue
}

__toInt() {
   declare -i returnValue=0
   if (( $# == 2 )); then
      local this="$1"
      local pointer
      pointer="$(__getObjectPointer "${this}")"
      System.out.println "${__ATTRIBUTEPOOL__[${pointer}@level]}" 
   else
      __throw "IllegalArgumentException" ": Wrong number of arguments $(($#-2))"
      returnValue=$?
      __handleErrorMessage "$2" "${FUNCNAME:2}"
   fi
   return $returnValue
}

#################
#               #
#     HELP      # 
#               #
#################

complete -W  "$(echo ${__Level__[@]}) all Level" Level.help

# Your Level help system:
Level.help() {  
   local printStream=${printStream:-out}  
   if (( $# == 0 )); then
      System."${printStream}".println "
                    Usage: Level.help all|methodname
                    Available methods:
                    -equals
                    -getClass
                    -getSyslogEquivalent
                    -hashCode
                    -isGreaterOrEqual
                    -toInt
                    -toString
                    Constructor: 
                    -Level
                 " 
      return 0
   fi
   while (($#))
   do
      local match=$(Boolean.FALSE)
      case $1 in
         Level|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               Level
                  Constructor for the Level objects. All objectnames are keywords
                  after object creation.
                  You will not be able to create another object with the same name.
               Parameters:
                  objectname 
                  level
                  levelStr
                  syslogEquivalent
               Returns:
                  None
               Throws:
                  IllegalArgumentException - if number of arguments != 4
                                           - if objectname is not valid
                                           - if objectname is a keyword
                                           - if objectname contains full stop character
                                           - if objectname contains slash character
               Example:
                  Level a <level> <levelStr> <syslogEquivalent> 
            ";;& 
      equals|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               equals
                  Two priorities are equal if their level fields are equal.
               Parameters:
                  anObject - The object to be compared with
               Returns:
                  true if and only if the objects have the same level field; false otherwise
               Throws:
                  IllegalArgumentException - if number of arguments != 1
               Example:
                  Level a 1000 "FATAL" 0
                  Level b 1000 "MYLEVEL" 0
                  a.equals b
                  >>>true
            ";;&
      getClass|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               getClass
                  Returns the runtime class of this Object.
               Parameters:
                  None
               Returns:
                  The Class object that represents the runtime class of this object.
               Throws:
                  IllegalArgumentException - if number of arguments != 0
               Example:
                  Level b 2 3 4
                  b.getClass
                  >>>class Level
            ";;&
      getSyslogEquivalent|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               getSyslogEquivalent
                  Returns the value of syslogEquivalent
               Parameters:
                  None
               Returns:
                  The value of syslogEquivalent.
               Throws:
                  IllegalArgumentException - if number of arguments != 0
               Example:
                  Level b 2 3 4
                  b.getSyslogEquivalent  
                  >>>4
            ";;& 
      hashCode|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               hashCode
                  Returns a hash code for this Level object.
               Parameters:
                  None
               Returns:
                  a hash code for this Level.
               Throws:
                  NotInPathException - if bc not in path
                  IllegalArgumentException - if number of arguments != 0
               Example:
                  Level INFO 20000 INFO  6
                  INFO.hashCode
                  >>>2251950
            ";;&
      isGreaterOrEqual|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               isGreaterOrEqual       
               Parameters:
                  anObject - The object to be compared with
               Returns:
                  Returns true if this level has a higher or equal level 
                  than the level passed as argument, false otherwise.
               Throws:
                  IllegalArgumentException - if number of arguments != 1
                                           - if argument is no object                         
                  WrongClassException - if argument has the wrong class
               Example:
                  Level a 1000 "FATAL" 0
                  Level b 1000 "MYLEVEL" 0
                  a.isGreaterOrEqual b
                  >>>true
            ";;&
      toInt|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               toInt
                  Returns the value of level
               Parameters:
                  None
               Returns:
                  The value of level.
               Throws:
                  IllegalArgumentException - if number of arguments != 0
               Example:
                  Level b 2 3 4
                  b.toInt
                  >>>2 
            ";;& 
      toString|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
               toString
                  Returns the string representation of this level.
               Parameters:
                  None
               Returns:
                  The value of levelStr.
               Throws:
                  IllegalArgumentException - if number of arguments != 0
               Example:
                  Level b 2 3 4
                  b.toString
                  >>>3
            ";;&
         *)   if [[ "${match}" == "$(Boolean.FALSE)" ]]; then
                 System."${printStream}".println "                                  
                       No help found for $1
                    "   
              fi
              ;;& 
      esac               
      shift
   done 
}
