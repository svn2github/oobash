##################################################################
# Author:  andreas.gregor.frank@googlemail.com
#
# License: The MIT License
#
# Copyright (c) <2011> <andreas.gregor.frank@googlemail.com>

#################
#################
##             ##
##     I18N    ## 
##             ##
#################
#################

I18n.err.print() {
   __decoratorCheck  "${FUNCNAME[0]}" "${BASH_SOURCE[0]}" "$@"

   local printStream=err
   local message="$1"
   local print=print

   if (( $# > 1  )); then
      __throw "IllegalArgumentException" ": Wrong number of arguments $#"
      return $?
   fi

   __i18nMessage "${message}"

   return 0
}
__registerFunction I18n.err.print


I18n.err.println() {
   __decoratorCheck  "${FUNCNAME[0]}" "${BASH_SOURCE[0]}" "$@"

   local printStream=err
   local message="$1"
   local print=println

   if (( $# > 1  )); then
      __throw "IllegalArgumentException" ": Wrong number of arguments $#"
      return $?
   fi

   __i18nMessage "${message}"

   return 0
}
__registerFunction I18n.err.println


I18n.out.print() {
   __decoratorCheck  "${FUNCNAME[0]}" "${BASH_SOURCE[0]}" "$@"

   local printStream=out
   local message="$1"
   local print=print

   if (( $# > 1  )); then
      __throw "IllegalArgumentException" ": Wrong number of arguments $#"
      return $?
   fi

   __i18nMessage "${message}"

   return 0
}
__registerFunction I18n.out.print


I18n.out.println() {
   __decoratorCheck  "${FUNCNAME[0]}" "${BASH_SOURCE[0]}" "$@"

   local printStream=out
   local message="$1"
   local print=println

   if (( $# > 1  )); then
      __throw "IllegalArgumentException" ": Wrong number of arguments $#"
      return $?
   fi

   __i18nMessage "${message}"

   return 0
}
__registerFunction I18n.out.println


#################
#               #
#     HELP      # 
#               #
#################

complete -W  "err.print err.println out.print out.println all" I18n.help

I18n.help() {  
   local printStream=${printStream:-out}
   if (( $# == 0 )); then
      System."${printStream}".println "
      Usage: I18n.help all|methodname
      Available methods:
      -I18n.err.print -I18n.err.println
      -I18n.out.print -I18n.out.println
      Constructor: 
      None
                 "
      return 0
   fi
   while (($#))
   do
      local match=$(Boolean.FALSE)  
      case $1 in
			I18n.err.print|err.print|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
            I18n.err.print
               Translates a natural language message into the user’s language, by looking 
               up the translation in a message catalog and prints the message to stderr.
            Parameters:
               x - The message to be translated and printed.
            Throws:
               IllegalArgumentException - if number of arguments > 1
            Example:
               I18n.err.print \" oo-style framework for bash 4\"
               I18n.err.print ' Version:      \${__VERSION__}'
               I18n.err.print \"Sorry, no valid classname: '\\\$userClass'\"
            ";;& 
         I18n.err.println|err.println|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
            I18n.err.println
               Translates a natural language message into the user’s language, by looking 
               up the translation in a message catalog and prints the message and then terminates
               to stderr.
            Parameters:
               x - The message to be translated and printed.
            Throws:
               IllegalArgumentException - if number of arguments > 1
            Example:
               I18n.err.println \" oo-style framework for bash 4\"
               I18n.err.println ' Version:      \${__VERSION__}'
               I18n.err.println \"Sorry, no valid classname: '\\\$userClass'\"
            ";;& 
         I18n.out.print|out.print|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
            I18n.out.print
               Translates a natural language message into the user’s language, by looking 
               up the translation in a message catalog and prints the message to stdout.
            Parameters:
               x - The message to be translated and printed.
            Throws:
               IllegalArgumentException - if number of arguments > 1
            Example:
               I18n.out.print \" oo-style framework for bash 4\"
               I18n.out.print ' Version:      \${__VERSION__}'
               I18n.out.print \"Sorry, no valid classname: '\\\$userClass'\"
            ";;&
         I18n.out.println|out.println|all)
            match=$(Boolean.TRUE)
            System."${printStream}".println "
            I18n.out.println
               Translates a natural language message into the user’s language, by looking 
               up the translation in a message catalog and prints the message and then terminates 
               to stdout.
            Parameters:
               x - The message to be translated and printed.
            Throws:
               IllegalArgumentException - if number of arguments > 1
            Example:
               I18n.out.println \" oo-style framework for bash 4\"
               I18n.out.println ' Version:      \${__VERSION__}'
               I18n.out.println \"Sorry, no valid classname: '\\\$userClass'\"
            ";;&
         *)   if [[ "${match}" == "$(Boolean.FALSE)" ]]; then
                 System."${printStream}".println "
                       No help found for $1
                    "
              fi
              ;;& 
      esac
      shift
   done
}
__registerFunction I18n.help
